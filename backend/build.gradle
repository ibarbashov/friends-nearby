import java.nio.file.Files
import java.nio.file.Paths

import static java.nio.file.StandardOpenOption.CREATE

buildscript {
    ext {
        springBootVersion = "1.5.6.RELEASE"
    }
}

plugins {
    id "org.springframework.boot" version "1.5.6.RELEASE"
}

apply plugin: "java"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")

    compile("org.springframework.data:spring-data-jpa")
    compile("org.springframework.security:spring-security-web")

    compile("org.hibernate:hibernate-core:5.1.0.Final")
    compile("org.hibernate:hibernate-entitymanager:5.1.0.Final")
    compile("org.hibernate:hibernate-validator:5.2.4.Final")

    compile("org.eclipse.persistence:javax.persistence:2.1.0")
    compile("commons-dbcp:commons-dbcp:1.4")
    compile("org.postgresql:postgresql:42.1.4")

    compileOnly("org.projectlombok:lombok:1.16.18")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task getVersionTag(type: Exec) {
    commandLine "git", "describe"
    def outputPath = Paths.get("$projectDir/src/main/resources/.git_version_tag")
    standardOutput = Files.newOutputStream(outputPath, CREATE)
}

compileJava.dependsOn(processResources)
compileJava.dependsOn(getVersionTag)
